using UnityEngine;
using System.Collections;

public class DontDestroyOnload : MonoBehaviour {
    private bool FunctionActive;//函式啟動偵測變數
    public bool ForceActive;//增加力道啟動偵測變數
    public Rigidbody AddforceToUp;//增加一個力
    public int Force=2500;//要施加多少力道
    public float Timer;//增加一個整數的計時器
    public Transform Cube;//方塊物件
    public Transform Plane;//平面物件
    public Transform Sphere;//圓球物件

    /***************燈光物件********************/
    public Transform Directionllight;//方向光物件
    public Transform Pointlight;//點光源物件
    public Transform Spotlight;//聚光燈物件

    void Awake()
    {
        DontDestroyOnLoad(transform.gameObject);//設定切換場景的時候，不要摧毀該物件

    }
	void Start () {
       
        AddforceToUp = GetComponent<Rigidbody>();
	}

	void Update () {
       
        if (FunctionActive == true)
        {
            this.gameObject.transform.Rotate(0, 90 * Time.deltaTime, 0);//一直旋轉物件
            
            Debug.Log("物件已旋轉");
        }
        
      
	}
    
    void OnMouseDown()
    {
        if (FunctionActive == false)//當FunctionActive為False才可以觸發
        {

            FunctionActive = true;//控制函式變數更改為true
        }
        if (ForceActive == false)//當FunctionActive為False才可以觸發
        {
            AddforceToUp.AddForce(transform.up * Force);//增加一個一次性的向上力道
            ForceActive = true;//是否可以增加向上力道的bool判斷
        }
        
       
    }
    void OnTriggerEnter(Collider other)
    {
        if (other.name == "Sphere")
        {

            Debug.Log("已碰撞");
            ForceActive = false;//碰到地面才可以再跳第二次

        }
    
    }

    public void CopyCube()//創建方塊物件
    {

        Instantiate(Cube, new Vector3(105, 100, -14), Quaternion.identity);


    }
    public void CopyPlane()//創建平面物件
    {

        Instantiate(Plane, new Vector3(105, 100, -14), Quaternion.identity);


    }
    public void CopySphere()//創建圓球物件
    {

        Instantiate(Sphere, new Vector3(105, 100, -14), Quaternion.identity);

    }




    /***************創建燈光********************/
    public void CopyDirectionllight()//創建方向光物件
    {

        Instantiate(Directionllight, new Vector3(105, 100, -14), Quaternion.identity);

    }
    public void CopyPointlight()//創建點光源物件
    {

        Instantiate(Pointlight, new Vector3(105, 100, -14), Quaternion.identity);

    }
    public void CopySpotlight()//創建聚光燈物件
    {

        Instantiate(Spotlight, new Vector3(105, 100, -14), Quaternion.identity);

    }


}
